class Gadalka {
    constructor() {
        this.lock = false;
    }

    start() {
        const name = this.fillName();
        if (this.lock) {
            this.done();
            return;
        }

        const age = this.fillAge();
        if (this.lock) {
            this.done();
            return;
        }

        this.prediction(name, age);
    }

    done() {
        if (!this.lock) return;

        alert('–°–µ–∞–Ω—Å –∑–≤–µ—Ä—à–µ–Ω–æ, –≥—Ä–æ—à—ñ –Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–º–æ =)');

        this.lock = false;
    }

    fillName() {
        const name = prompt("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è: ");

        if (!name) {
            const end = confirm("–í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ –ø—Ä–æ —Å–µ–±–µ! –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Å–µ–∞–Ω—Å?");
            if (end) {
                this.lock = true;
                return;
            }
            this.fillName()
        }

        return name;
    }

    fillAge() {
        const age = prompt("–°–∫—ñ–ª—å–∫–∏ —Ä–æ—á–∫—ñ–≤? ");

        if (!age) {
            const end = confirm("–¶–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ, –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ 18+. –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Å–µ–∞–Ω—Å?");
            if (end) {
                this.lock = true;
                return;
            }
            this.fillAge()
        }

        if (parseInt(age) < 1 || parseInt(age) > 100) {
            alert('–Ø–∫—É—Å—å —Ö—Ä—ñ–Ω—å –≤–≤—ñ–≤) –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑, –∞–±–æ –∑–∞–≤–µ—Ä—à–∏ —Å–µ–∞–Ω—Å');
            const end = confirm("–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Å–µ–∞–Ω—Å?");
            if (end) {
                this.lock = true;
                return;
            }
            this.fillAge()
        }

        if (parseInt(age) < 18) {
            alert('–°–æ—Ä—ñ, —Ç–∏ —â–µ –º–∞–ª—è–≤–∫–∞ =)');
            this.lock = true;
            return;
        }

        return parseInt(age);
    }

    prediction(name, age) {
        const yearsLeft = Math.round(Math.random() * age);
        const kids = Math.floor(Math.random() * 4);

        alert(`–£ –≤–∞—Å –±—É–¥–µ ${kids} –¥—ñ—Ç–µ–πü§±üèø.
         –ñ–∏—Ç–∏ –∑–∞–ª–∏—à–∏–ª–æ—Å—å  –≤—Å—å–æ–≥–æ ${yearsLeft} —Ä–æ–∫–∏ ü§∑.‚Äç`)
    }
}

const gadalka = new Gadalka();

